language: cpp

matrix:
  include:
    - os: linux
      dist: focal
      compiler: gcc
      env:
        - H5GEO_SUPERBUILD=False
        - H5GEO_USE_THREADS=True
        - H5GEO_BUILD_SHARED_LIBS=True
        - H5GEO_BUILD_TESTS=True
        - CMAKE_GENERATOR="Ninja"
        - TESTS_TARGET="test"
      addons:
        apt:
          packages:
            - libhdf5-dev
            - ninja-build
            - libtbb-dev

    - os: linux
      dist: focal
      compiler: clang
      env:
        - H5GEO_SUPERBUILD=False
        - H5GEO_USE_THREADS=True
        - H5GEO_BUILD_SHARED_LIBS=False
        - H5GEO_BUILD_TESTS=True
        - CMAKE_GENERATOR="Ninja"
        - TESTS_TARGET="test"
      addons:
        apt:
          packages:
            - libhdf5-dev
            - ninja-build
            - libtbb-dev

    - os: linux
      dist: focal
      compiler: clang
      env:
        - H5GEO_SUPERBUILD=False
        - H5GEO_USE_THREADS=False
        - H5GEO_BUILD_SHARED_LIBS=True
        - H5GEO_BUILD_TESTS=True
        - CMAKE_GENERATOR="Ninja"
        - TESTS_TARGET="test"
      addons:
        apt:
          packages:
            - libhdf5-dev
            - ninja-build

    - os: windows
      env:
        - H5GEO_SUPERBUILD=True
        - H5GEO_USE_THREADS=True
        - H5GEO_BUILD_SHARED_LIBS=True
        - H5GEO_BUILD_TESTS=True
        - CMAKE_GENERATOR="Visual Studio 15 2017 Win64"
        - TESTS_TARGET="RUN_TESTS"

    - os: windows
      env:
        - H5GEO_SUPERBUILD=True
        - H5GEO_USE_THREADS=True
        - H5GEO_BUILD_SHARED_LIBS=False
        - H5GEO_BUILD_TESTS=True
        - CMAKE_GENERATOR="Visual Studio 15 2017 Win64"
        - TESTS_TARGET="RUN_TESTS"

    - os: osx
      osx_image: xcode12.2
      compiler: clang
      env:
        - H5GEO_SUPERBUILD=False
        - H5GEO_USE_THREADS=False
        - H5GEO_BUILD_SHARED_LIBS=True
        - H5GEO_BUILD_TESTS=True
        - CMAKE_GENERATOR="Ninja"
        - TESTS_TARGET="test"

env:
  global:
  - EIGEN3_ROOT=${TRAVIS_BUILD_DIR}/../eigen
  - magic_enum_ROOT=${TRAVIS_BUILD_DIR}/../magic_enum
  - h5gt_ROOT=${TRAVIS_BUILD_DIR}/../h5gt
  - CMAKE_INSTALL_PREFIX=${TRAVIS_BUILD_DIR}/../install

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then 
      git clone --branch 3.4.0-rc1 https://gitlab.com/libeigen/eigen.git $EIGEN3_ROOT;
      export PATH=$EIGEN3_ROOT:$PATH;
      git clone --branch v0.7.2 https://github.com/Neargye/magic_enum.git $magic_enum_ROOT;
      export PATH=$magic_enum_ROOT:$PATH;
      git clone --branch main https://github.com/Dimspot/h5gt.git $h5gt_ROOT;
      export PATH=$h5gt_ROOT:$PATH;
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then 
      git clone --branch 3.4.0-rc1 https://gitlab.com/libeigen/eigen.git $EIGEN3_ROOT;
      export PATH=$EIGEN3_ROOT:$PATH;
      git clone --branch v0.7.2 https://github.com/Neargye/magic_enum.git $magic_enum_ROOT;
      export PATH=$magic_enum_ROOT:$PATH;
      git clone --branch main https://github.com/Dimspot/h5gt.git $h5gt_ROOT;
      export PATH=$h5gt_ROOT:$PATH;
      wget "http://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh" -O miniconda.sh;
      bash miniconda.sh -b -p $HOME/miniconda;
      source $HOME/miniconda/bin/activate;
      hash -r;
      conda config --set always_yes yes --set changeps1 no;
      conda update -q conda;
      conda install -c conda-forge mamba;
      mamba install -c conda-forge tbb zlib hdf5 ninja;
    elif [[ "$TRAVIS_OS_NAME" == "windows" ]]; then 
      echo %CMAKE_INSTALL_PREFIX%;
      echo %TRAVIS_BUILD_DIR%;
      set PATH=%PATH%;%CMAKE_INSTALL_PREFIX%/zlib-install/bin;
      set PATH=%PATH%;%CMAKE_INSTALL_PREFIX%/hdf5-install/bin;
      set PATH=%PATH%;%TRAVIS_BUILD_DIR%/build/Debug;
    fi

before_script:
  - if [[ "$TRAVIS_COMPILER" == "gcc" ]]; then 
      gcc --version;
    elif [[ "$TRAVIS_COMPILER" == "clang" ]]; then 
      clang --version;
    fi
  - cmake --version
  - python --version

script:
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir -p build && pushd build
  - >
    cmake --warn-uninitialized --debug-output
    -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON
    -DEigen3_ROOT:PATH=$EIGEN3_ROOT 
    -Dmagic_enum_ROOT:PATH=$magic_enum_ROOT 
    -Dh5gt_ROOT:PATH=$h5gt_ROOT
    -DH5GEO_SUPERBUILD:BOOL=${H5GEO_SUPERBUILD}
    -DH5GEO_USE_THREADS:BOOL=${H5GEO_USE_THREADS}
    -DH5GEO_BUILD_SHARED_LIBS:BOOL=${H5GEO_BUILD_SHARED_LIBS}
    -DH5GEO_BUILD_TESTS:BOOL=${H5GEO_BUILD_TESTS}
    -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_INSTALL_PREFIX}
    -G "${CMAKE_GENERATOR}" ../
  - cmake --build .
  - CTEST_OUTPUT_ON_FAILURE=1 cmake --build . --target ${TESTS_TARGET}
  # - popd
  # - bash tests/test_project_integration.sh;