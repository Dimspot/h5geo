set(SETUP_PY_IN @CMAKE_SOURCE_DIR@/cmake/setup.py.in)
set(SETUP_PY_OUT @CMAKE_CURRENT_BINARY_DIR@/setup.py)

set(MANIFEST_IN @CMAKE_SOURCE_DIR@/cmake/MANIFEST.in.in)
set(MANIFEST_OUT @CMAKE_CURRENT_BINARY_DIR@/MANIFEST.in)

set(INIT_PY_IN @CMAKE_SOURCE_DIR@/cmake/__init__.py.in)
set(INIT_PY_OUT @CMAKE_CURRENT_BINARY_DIR@/h5geopy/__init__.py)

# set(TEST_PY_IN @CMAKE_SOURCE_DIR@/tests/pytest/h5geopy_test.py)
# set(TEST_PY_OUT @CMAKE_CURRENT_BINARY_DIR@/h5geopy/h5geopy_test.py)

# set(STUBS_INIT_IN @CMAKE_SOURCE_DIR@/stubs/h5geopy/_h5geo-stubs/h5geo.pyi)
# set(STUBS_INIT_OUT @CMAKE_CURRENT_BINARY_DIR@/h5geopy/h5geopy/h5geo.pyi)

file(MAKE_DIRECTORY @CMAKE_CURRENT_BINARY_DIR@/h5geopy)
file(MAKE_DIRECTORY @CMAKE_CURRENT_BINARY_DIR@/h5geopy/h5geopy)

# `MODULE_PATTERN` is also used when configuring `MANIFEST.in.in`
if(WIN32)
  set(MODULE_PATTERN "*.pyd")
else()
  set(MODULE_PATTERN "*.so")
endif()

configure_file(${SETUP_PY_IN} ${SETUP_PY_OUT})
configure_file(${MANIFEST_IN} ${MANIFEST_OUT})
configure_file(${INIT_PY_IN} ${INIT_PY_OUT} COPYONLY)
# configure_file(${TEST_PY_IN} ${TEST_PY_OUT} COPYONLY)
# configure_file(${STUBS_INIT_IN} ${STUBS_INIT_OUT} COPYONLY)

if(CMAKE_GENERATOR MATCHES "Visual Studio") # if(@MSVC@) -> I guess generator defines whether to add Release/Debug folder and not a compiler
  set(_h5geo_module_dir @CMAKE_CURRENT_BINARY_DIR@/@CMAKE_BUILD_TYPE@)
else()
  set(_h5geo_module_dir @CMAKE_CURRENT_BINARY_DIR@)
endif()

file(GLOB_RECURSE _h5geo_modules ${_h5geo_module_dir}/${MODULE_PATTERN})

file(GLOB_RECURSE _h5geo_modules @CMAKE_CURRENT_BINARY_DIR@/${MODULE_PATTERN})

list(LENGTH _h5geo_modules _h5geo_modules_len)
if (${_h5geo_modules_len} LESS 1)
  message(FATAL_ERROR "Can't find compiled _h5geo.version${MODULE_PATTERN} module to copy it in python package!")
else()
  list(GET _h5geo_modules 0 _h5geo_module)
  message(_h5geo_module: ${_h5geo_module})
endif()

configure_file(${_h5geo_module} @CMAKE_CURRENT_BINARY_DIR@/h5geopy COPYONLY)

execute_process(COMMAND @PYTHON_EXECUTABLE@ -m pip install @CMAKE_CURRENT_BINARY_DIR@)
