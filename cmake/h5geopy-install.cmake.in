# CMP001 is somehow connected with wether to use policy
# set from child projects to parents (i.e. connected with
# scope of policies)
cmake_policy(SET CMP0011 NEW)
# CMP0012 is needed in situations like `if(ON)` or `if(TRUE)`
# and this policy must be set in this file or it won't work
cmake_policy(SET CMP0012 NEW)

#-----------------------------------------------------------------------------
# Finding RUNTIME DEPS (i.e. hdf5.dll and h5geo.dll)
#-----------------------------------------------------------------------------
get_filename_component(h5geo_runtime_dir $<TARGET_FILE:h5geo> DIRECTORY)

message(STATUS "Resolving h5geopy RUNTIME dependencies...")

file(GET_RUNTIME_DEPENDENCIES
  LIBRARIES $<TARGET_FILE:_h5geo>
  RESOLVED_DEPENDENCIES_VAR res_deps
  UNRESOLVED_DEPENDENCIES_VAR unres_deps
  CONFLICTING_DEPENDENCIES_PREFIX confl_deps
  DIRECTORIES
    @HDF5_RUNTIME_DIR@
    @H5GEO_RUNTIME_DIR@
    ${h5geo_runtime_dir}
  PRE_INCLUDE_REGEXES "^.*([Hh][Dd][Ff][5]|[Hh][5][Gg][Ee][Oo]).*$"
  PRE_EXCLUDE_REGEXES "[^\n]+"
)

foreach(_file ${res_deps})
  message(STATUS "Dependency Resolved: ${_file}")
endforeach()

foreach(_file ${unres_deps})
  message(STATUS "Dependency Unresolved: ${_file}")
endforeach()

foreach(_file ${confl_deps_FILENAMES})
  message(STATUS "Found conflicting dependency: ${_file}")

  foreach(_file_path ${confl_deps_${_file}})
    message(${_file_path})
  endforeach()
endforeach()

list(LENGTH unres_deps unres_deps_LEN)
if(${unres_deps_LEN} GREATER 0)
  message(FATAL_ERROR "There are UNRESOLVED runtime dependencies.
  Try setting `HDF5_RUNTIME_DIR` and rerun `cmake .` and `cmake --install .`
  (you don't have to rebuild the project)")
endif()

list(LENGTH confl_deps confl_deps_LEN)
if(${confl_deps_LEN} GREATER 0)
  message(FATAL_ERROR "There are CNFLICTING runtime dependencies.
  Try setting `HDF5_RUNTIME_DIR` and rerun `cmake .` and `cmake --install .`
  (you don't have to rebuild the project)")
endif()


#-----------------------------------------------------------------------------
# Setting variables needed to configure in-files
#-----------------------------------------------------------------------------
set(H5GEOPY_DIR @CMAKE_CURRENT_BINARY_DIR@/h5geopy)

file(MAKE_DIRECTORY ${H5GEOPY_DIR})
file(MAKE_DIRECTORY ${H5GEOPY_DIR}/h5geopy)

set(SETUP_PY_IN @CMAKE_SOURCE_DIR@/cmake/setup.py.in)
set(SETUP_PY_OUT @CMAKE_CURRENT_BINARY_DIR@/setup.py)

set(MANIFEST_IN @CMAKE_SOURCE_DIR@/cmake/MANIFEST.in.in)
set(MANIFEST_OUT @CMAKE_CURRENT_BINARY_DIR@/MANIFEST.in)

set(INIT_PY_IN @CMAKE_SOURCE_DIR@/cmake/__init__.py.in)
set(INIT_PY_OUT ${H5GEOPY_DIR}/__init__.py)

set(STUBS_INIT_IN @CMAKE_SOURCE_DIR@/stubs/h5geopy/_h5geo-stubs/h5geo.pyi)
set(STUBS_INIT_OUT ${H5GEOPY_DIR}/h5geopy/h5geo.pyi)

set(WELL_DEV_IN @CMAKE_SOURCE_DIR@/tests/pytest/data/well_dev)
set(WELL_DEV_OUT ${H5GEOPY_DIR}/tests/data/well_dev)

set(WELL_LAS_IN @CMAKE_SOURCE_DIR@/tests/pytest/data/well_las)
set(WELL_LAS_OUT ${H5GEOPY_DIR}/tests/data/well_las)

file(GLOB_RECURSE TEST_PY_IN_LIST @CMAKE_SOURCE_DIR@/tests/pytest/*.py)
set(TEST_PY_OUT_DIR ${H5GEOPY_DIR}/tests)

# `MODULE_PATTERN` is also used when configuring `MANIFEST.in.in`
if(WIN32)
  set(MODULE_PATTERN "*.pyd")
  set(ADD_TO_MANIFEST "include h5geopy/*.dll")
else()
  set(MODULE_PATTERN "*.so")
  set(ADD_TO_MANIFEST "")
endif()


#-----------------------------------------------------------------------------
# Configuring in-files
#-----------------------------------------------------------------------------

# copy runtime deps or change __init__.py file to modify ENV PATH
if(@COPY_H5GEOPY_RUNTIME_DEPS@)
  foreach(_file ${res_deps})
    configure_file(${_file} ${H5GEOPY_DIR} COPYONLY)
  endforeach()
else()
  foreach(_file ${res_deps})
    get_filename_component(_file_we ${_file} NAME_WE) # NAME_WE - without extension
    if(${_file_we} MATCHES "^.*hdf5.*$")
      get_filename_component(hdf5_dep ${_file} DIRECTORY)
    endif()
  endforeach()

  get_filename_component(CMAKE_ABS_INSTALL_PREFIX ${CMAKE_INSTALL_PREFIX} ABSOLUTE)

# `PYTHON_INIT_PATH_VAR` is used to configure `INIT_PY_IN` file
#----------------------DONT TOUCH SPACES HERE!----------------------
set(PYTHON_INIT_PATH_VAR
"
import os

if not os.environ['PATH'].__contains__('${CMAKE_ABS_INSTALL_PREFIX}/lib'):
    os.environ['PATH'] += ';${CMAKE_ABS_INSTALL_PREFIX}/lib'

if not os.environ['PATH'].__contains__('${hdf5_dep}'):
    os.environ['PATH'] += ';${hdf5_dep}'
"
)
#--------------------------END OF WARNING---------------------------

endif()

configure_file(${SETUP_PY_IN} ${SETUP_PY_OUT})
configure_file(${MANIFEST_IN} ${MANIFEST_OUT})
configure_file(${INIT_PY_IN} ${INIT_PY_OUT})
configure_file(${STUBS_INIT_IN} ${STUBS_INIT_OUT} COPYONLY)
configure_file(${WELL_DEV_IN} ${WELL_DEV_OUT} COPYONLY)
configure_file(${WELL_LAS_IN} ${WELL_LAS_OUT} COPYONLY)
configure_file($<TARGET_FILE:_h5geo> ${H5GEOPY_DIR} COPYONLY)

# copy pytests
foreach(_file ${TEST_PY_IN_LIST})
  configure_file(${_file} ${TEST_PY_OUT_DIR} COPYONLY)
endforeach()


#-----------------------------------------------------------------------------
# Pip install
#-----------------------------------------------------------------------------
execute_process(COMMAND @PYTHON_EXECUTABLE@ -m pip install @CMAKE_CURRENT_BINARY_DIR@)
