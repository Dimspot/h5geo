message("external project: h5geo")

set(h5geo_DIR PATH ${CMAKE_INSTALL_PREFIX}/cmake/h5geo)

set(DEPENDENCIES Eigen3 ZLIB HDF5 h5gt magic_enum units)

if(H5GEO_USE_THREADS AND NOT MSVC)
  list(APPEND DEPENDENCIES TBB)
endif()

ExternalProject_Add(h5geo
  DOWNLOAD_COMMAND ""
  INSTALL_COMMAND ""
  SOURCE_DIR ${CMAKE_SOURCE_DIR}
  BINARY_DIR ${CMAKE_BINARY_DIR}
  INSTALL_DIR ${CMAKE_INSTALL_PREFIX}
  CMAKE_CACHE_ARGS
    # Compiler settings
    -DCMAKE_CXX_COMPILER:FILEPATH=${CMAKE_CXX_COMPILER}
    -DCMAKE_CXX_FLAGS:STRING=${ep_common_cxx_flags}
    -DCMAKE_C_COMPILER:FILEPATH=${CMAKE_C_COMPILER}
    -DCMAKE_C_FLAGS:STRING=${ep_common_c_flags}
    -DCMAKE_CXX_STANDARD:STRING=${CMAKE_CXX_STANDARD}
    -DCMAKE_CXX_STANDARD_REQUIRED:BOOL=${CMAKE_CXX_STANDARD_REQUIRED}
    -DCMAKE_CXX_EXTENSIONS:BOOL=${CMAKE_CXX_EXTENSIONS}
    -DCMAKE_PREFIX_PATH:PATH=${CMAKE_PREFIX_PATH} # pass dirs to find for libs needed
    # Output directories
    -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
    -DEigen3_ROOT:PATH=${Eigen3_ROOT}
    -DZLIB_ROOT:PATH=${ZLIB_ROOT}
    -DHDF5_ROOT:PATH=${HDF5_ROOT}
    -Dh5gt_ROOT:PATH=${h5gt_ROOT}
    -Dmagic_enum_ROOT:PATH=${magic_enum_ROOT}
    -DTBB_ROOT:PATH=${TBB_ROOT}
    # Lib settings
    -DH5GEO_SUPERBUILD:BOOL=OFF
    -DH5GEO_USE_THREADS:BOOL=${H5GEO_USE_THREADS}
    -DH5GEO_BUILD_SHARED_LIBS:BOOL=${H5GEO_BUILD_SHARED_LIBS}
    -DH5GEO_BUILD_TESTS:BOOL=${H5GEO_BUILD_TESTS}
  DEPENDS ${DEPENDENCIES}
  )
