set(proj PROJ)
message("external project: ${proj}")

# SET DIRS
set(EP_SOURCE_DIR "${CMAKE_BINARY_DIR}/${proj}")
set(EP_BINARY_DIR "${CMAKE_BINARY_DIR}/${proj}-build")
set(EP_INSTALL_DIR "${CMAKE_INSTALL_PREFIX}/${proj}-install")
list(APPEND CMAKE_PREFIX_PATH ${EP_INSTALL_DIR})

#-----------------------------------------------------------------------------
set(PROJ_ROOT ${EP_INSTALL_DIR})
set(PROJ_DIR "${PROJ_ROOT}/lib/cmake/proj")
# sets PROJ_LIBRARIES to PROJ::proj (then we override it)

if(WIN32)
  set(PROJ_LIBRARIES "${PROJ_ROOT}/lib/proj.lib")
  list(APPEND GDAL_RUNTIME_DIRS "${PROJ_ROOT}/bin")
else()
  set(PROJ_LIBRARIES "${PROJ_ROOT}/lib/libproj.so")
  list(APPEND GDAL_RUNTIME_DIRS "${PROJ_ROOT}/lib")
endif()
list(APPEND GDAL_LIBS ${PROJ_LIBRARIES})

set(DEPENDENCIES SQLite3)

ExternalProject_Add(${proj}
  GIT_REPOSITORY "https://github.com/OSGeo/PROJ.git"
  GIT_TAG "9.0.0"
  SOURCE_DIR ${EP_SOURCE_DIR}
  BINARY_DIR ${EP_BINARY_DIR}
  INSTALL_DIR ${EP_INSTALL_DIR}
  CMAKE_CACHE_ARGS
    # CMake settings
    -DCMAKE_CXX_COMPILER:FILEPATH=${CMAKE_CXX_COMPILER}
    -DCMAKE_C_COMPILER:FILEPATH=${CMAKE_C_COMPILER}
    -DCMAKE_CXX_STANDARD:STRING=${CMAKE_CXX_STANDARD}
    -DCMAKE_CXX_STANDARD_REQUIRED:BOOL=${CMAKE_CXX_STANDARD_REQUIRED}
    -DCMAKE_CXX_EXTENSIONS:BOOL=${CMAKE_CXX_EXTENSIONS}
    -DCMAKE_INSTALL_PREFIX:PATH=<INSTALL_DIR>
    # Lib settings
    -DENABLE_TIFF:BOOL=OFF 
    -DENABLE_CURL:BOOL=OFF 
    -DBUILD_PROJSYNC:BOOL=OFF 
    -DRUN_NETWORK_DEPENDENT_TESTS:BOOL=OFF 
    -DBUILD_TESTING:BOOL=OFF 
    -DSQLITE3_INCLUDE_DIR:PATH=${SQLite3_INCLUDE_DIRS}
    -DSQLITE3_LIBRARY:PATH=${SQLite3_LIBRARIES}
    -DEXE_SQLITE3:FILEPATH=${SQLite3_EXE}
    -DPython_EXECUTABLE:FILEPATH=${Python_EXECUTABLE}
  DEPENDS ${DEPENDENCIES}
  )
